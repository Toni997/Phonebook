// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MojiKontaktiAPI.Models;

namespace MojiKontaktiAPI.Migrations
{
    [DbContext(typeof(MojiKontaktiDbContext))]
    [Migration("20210616171951_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MojiKontaktiAPI.Models.BrojTelefona", b =>
                {
                    b.Property<int>("BrojTelefonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Glavni")
                        .HasColumnType("bit");

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PozivniBrojDrzave")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("BrojTelefonaID");

                    b.HasIndex("KontaktID");

                    b.ToTable("BrojeviTelefona");

                    b.HasData(
                        new
                        {
                            BrojTelefonaID = 15,
                            Broj = "923587894",
                            Glavni = false,
                            KontaktID = 15,
                            Opis = "Posao",
                            PozivniBrojDrzave = "385"
                        },
                        new
                        {
                            BrojTelefonaID = 16,
                            Broj = "958796574",
                            Glavni = false,
                            KontaktID = 16,
                            Opis = "Bolnica",
                            PozivniBrojDrzave = "385"
                        },
                        new
                        {
                            BrojTelefonaID = 17,
                            Broj = "915647893",
                            Glavni = false,
                            KontaktID = 17,
                            Opis = "Privatni",
                            PozivniBrojDrzave = "385"
                        },
                        new
                        {
                            BrojTelefonaID = 18,
                            Broj = "986542389",
                            Glavni = false,
                            KontaktID = 18,
                            Opis = "Posao",
                            PozivniBrojDrzave = "385"
                        },
                        new
                        {
                            BrojTelefonaID = 19,
                            Broj = "923587894",
                            Glavni = false,
                            KontaktID = 19,
                            Opis = "Privatni",
                            PozivniBrojDrzave = "385"
                        },
                        new
                        {
                            BrojTelefonaID = 20,
                            Broj = "953652178",
                            Glavni = false,
                            KontaktID = 19,
                            Opis = "Posao",
                            PozivniBrojDrzave = "385"
                        });
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.EmailAdresa", b =>
                {
                    b.Property<int>("EmailAdresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Glavna")
                        .HasColumnType("bit");

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.HasKey("EmailAdresaID");

                    b.HasIndex("KontaktID");

                    b.ToTable("EmailAdrese");

                    b.HasData(
                        new
                        {
                            EmailAdresaID = 15,
                            Email = "ante.g@hotmail.com",
                            Glavna = false,
                            KontaktID = 15
                        },
                        new
                        {
                            EmailAdresaID = 16,
                            Email = "mirnaaaa@gmail.com",
                            Glavna = false,
                            KontaktID = 17
                        },
                        new
                        {
                            EmailAdresaID = 17,
                            Email = "toni.kazinoti@gmail.com",
                            Glavna = false,
                            KontaktID = 19
                        },
                        new
                        {
                            EmailAdresaID = 18,
                            Email = "tk48322@unist.hr",
                            Glavna = false,
                            KontaktID = 19
                        });
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Kontakt", b =>
                {
                    b.Property<int>("KontaktID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bookmarkiran")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nadimak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KontaktID");

                    b.ToTable("Kontakti");

                    b.HasData(
                        new
                        {
                            KontaktID = 15,
                            Bookmarkiran = false,
                            Ime = "Ante",
                            Prezime = "Gotovac"
                        },
                        new
                        {
                            KontaktID = 16,
                            Bookmarkiran = false,
                            Ime = "Josip",
                            Prezime = "Gabrilović"
                        },
                        new
                        {
                            KontaktID = 17,
                            Bookmarkiran = true,
                            Ime = "Mirna",
                            Nadimak = "Maca",
                            Prezime = "Medić"
                        },
                        new
                        {
                            KontaktID = 18,
                            Bookmarkiran = false,
                            Ime = "Bruno",
                            Prezime = "Medaković"
                        },
                        new
                        {
                            KontaktID = 19,
                            Bookmarkiran = true,
                            Ime = "Toni",
                            Nadimak = "Kazi",
                            Prezime = "Kazinoti"
                        });
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.HasIndex("KontaktID");

                    b.ToTable("Tagovi");

                    b.HasData(
                        new
                        {
                            TagID = 15,
                            KontaktID = 15,
                            Naziv = "Prijatelj"
                        },
                        new
                        {
                            TagID = 16,
                            KontaktID = 15,
                            Naziv = "Zvati u 8h"
                        },
                        new
                        {
                            TagID = 17,
                            KontaktID = 17,
                            Naziv = "Rođak"
                        },
                        new
                        {
                            TagID = 18,
                            KontaktID = 19,
                            Naziv = "Brat"
                        },
                        new
                        {
                            TagID = 19,
                            KontaktID = 19,
                            Naziv = "Najjači"
                        });
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.BrojTelefona", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("BrojeviTelefona")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.EmailAdresa", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("EmailAdrese")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Tag", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("Tagovi")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Kontakt", b =>
                {
                    b.Navigation("BrojeviTelefona");

                    b.Navigation("EmailAdrese");

                    b.Navigation("Tagovi");
                });
#pragma warning restore 612, 618
        }
    }
}
