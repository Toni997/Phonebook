// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MojiKontaktiAPI.Models;

namespace MojiKontaktiAPI.Migrations
{
    [DbContext(typeof(MojiKontaktiDbContext))]
    [Migration("20210616152135_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {

#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MojiKontaktiAPI.Models.BrojTelefona", b =>
                {
                    b.Property<int>("BrojTelefonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Broj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Glavni")
                        .HasColumnType("bit");

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PozivniBrojDrzave")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("BrojTelefonaID");

                    b.HasIndex("KontaktID");

                    b.ToTable("BrojeviTelefona");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.EmailAdresa", b =>
                {
                    b.Property<int>("EmailAdresaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Glavna")
                        .HasColumnType("bit");

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.HasKey("EmailAdresaID");

                    b.HasIndex("KontaktID");

                    b.ToTable("EmailAdrese");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Kontakt", b =>
                {
                    b.Property<int>("KontaktID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bookmarkiran")
                        .HasColumnType("bit");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nadimak")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KontaktID");

                    b.ToTable("Kontakti");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Tag", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KontaktID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.HasIndex("KontaktID");

                    b.ToTable("Tagovi");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.BrojTelefona", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("BrojeviTelefona")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.EmailAdresa", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("EmailAdrese")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Tag", b =>
                {
                    b.HasOne("MojiKontaktiAPI.Models.Kontakt", "Kontakt")
                        .WithMany("Tagovi")
                        .HasForeignKey("KontaktID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kontakt");
                });

            modelBuilder.Entity("MojiKontaktiAPI.Models.Kontakt", b =>
                {
                    b.Navigation("BrojeviTelefona");

                    b.Navigation("EmailAdrese");

                    b.Navigation("Tagovi");
                });
#pragma warning restore 612, 618
        }
    }
}
